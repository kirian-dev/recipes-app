services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    container_name: recipes_postgres
    environment:
      POSTGRES_DB: recipes_db
      POSTGRES_USER: recipes_user
      POSTGRES_PASSWORD: recipes_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - recipes_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U recipes_user -d recipes_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: recipes_backend
    environment:
      DATABASE_URL: postgresql://recipes_user:recipes_password@postgres:5432/recipes_db
      NODE_ENV: development
      PORT: 3001
      JWT_SECRET: your-super-secret-jwt-key
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - recipes_network
    command: sh -c "npm run db:init && npm run db:seed && npm run start:dev"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: recipes_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - recipes_network
    environment:
      REACT_APP_API_URL: http://localhost:3001

volumes:
  postgres_data:
  postgres_test_data:

networks:
  recipes_network:
    driver: bridge 